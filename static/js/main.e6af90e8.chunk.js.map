{"version":3,"sources":["useViewCounter.hook.js","useClickOutside.hook.js","Parameters.js","CustomizedBar.js","DemoApp.js","App.js","index.js"],"names":["useViewCounter","slug","useState","views","setViews","useEffect","fetch","mode","then","res","json","catch","err","console","error","message","useClickOutside","initialIsVisible","isVisible","setIsVisible","ref","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Parameters","handleChange","handleBgChange","handleBaseBgChange","handleLabelColorChange","barColor","setBarColor","baseBgColor","setBaseBgColor","labelColor","setLabelColor","cpOne","cpTwo","cpThree","className","htmlFor","name","id","type","placeholder","onChange","onClick","style","position","marginTop","color","onChangeComplete","hex","value","defaultValue","CustomizedBar","INITIAL_STATE","completed","bgcolor","height","width","borderRadius","labelAlignment","labelSize","margin","padding","state","setState","showCode","setShowCode","codeValue","setCodeValue","copySuccess","setCopySuccess","textAreaRef","handleReset","code","replace","e","select","execCommand","focus","DemoApp","setCompleted","setInterval","Math","floor","random","App","window","location","pathname","charAt","substring","getSlug","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e6af90e8.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nconst useViewCounter = slug => {\r\n  const [views, setViews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Don't count views on localhost\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      return;\r\n    }\r\n\r\n    fetch(`https://my-projects-dashboard.vercel.app/api/views/${slug}`, { mode: \"no-cors\" })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        setViews(json.views);\r\n      })\r\n      .catch(err => console.error(err.message));\r\n\r\n  }, [slug]);\r\n  return { views };\r\n};\r\n\r\nexport default useViewCounter;\r\n","import { useEffect, useState, useRef } from \"react\";\r\n\r\nconst useClickOutside = initialIsVisible => {\r\n  const [isVisible, setIsVisible] = useState(initialIsVisible);\r\n  const ref = useRef(null);\r\n\r\n  const handleClickOutside = event => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, true);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  return { ref, isVisible, setIsVisible };\r\n};\r\n\r\nexport default useClickOutside;\r\n","import React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport useClickOutside from \"./useClickOutside.hook\";\r\nimport \"./parameters.styles.scss\";\r\n\r\nconst Parameters = ({\r\n  handleChange,\r\n  handleBgChange,\r\n  handleBaseBgChange,\r\n  handleLabelColorChange\r\n}) => {\r\n  const [barColor, setBarColor] = useState(\"#6a1b9a\");\r\n  const [baseBgColor, setBaseBgColor] = useState(\"#e0e0de\");\r\n  const [labelColor, setLabelColor] = useState(\"#e80909\");\r\n  const cpOne = useClickOutside(false);\r\n  const cpTwo = useClickOutside(false);\r\n  const cpThree = useClickOutside(false);\r\n\r\n  const handleColorChangeCpOne = color => {\r\n    setBarColor(color.hex);\r\n    handleBgChange(color.hex);\r\n  };\r\n\r\n  const handleColorChangeCpTwo = color => {\r\n    setBaseBgColor(color.hex);\r\n    handleBaseBgChange(color.hex);\r\n  };\r\n\r\n  const handleColorChangeCpThree = color => {\r\n    setLabelColor(color.hex);\r\n    handleLabelColorChange(color.hex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"param\">\r\n        <label htmlFor=\"completed\">completed</label>\r\n        <input\r\n          name=\"completed\"\r\n          id=\"completed\"\r\n          type=\"text\"\r\n          placeholder=\"1-100\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"param\">\r\n        <button onClick={() => cpOne.setIsVisible(true)}>\r\n          Choose Bar Color\r\n        </button>\r\n        {cpOne.isVisible && (\r\n          <div\r\n            ref={cpOne.ref}\r\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\r\n          >\r\n            <ChromePicker\r\n              name=\"barColor\"\r\n              color={barColor}\r\n              onChangeComplete={handleColorChangeCpOne}\r\n            />\r\n          </div>\r\n        )}\r\n        <input\r\n          value={barColor}\r\n          name=\"bgcolor\"\r\n          type=\"text\"\r\n          onChange={event => {\r\n            handleChange(event);\r\n            setBarColor(event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"param\">\r\n        <label htmlFor=\"height\">height</label>\r\n        <input\r\n          name=\"height\"\r\n          id=\"height\"\r\n          type=\"text\"\r\n          placeholder=\"20px\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"param\">\r\n        <label htmlFor=\"width\">width</label>\r\n        <input\r\n          name=\"width\"\r\n          id=\"width\"\r\n          type=\"text\"\r\n          placeholder=\"100%\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"param\">\r\n        <label htmlFor=\"borderRadius\">border radius</label>\r\n        <input\r\n          name=\"borderRadius\"\r\n          id=\"borderRadius\"\r\n          type=\"text\"\r\n          placeholder=\"50px\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"param\">\r\n        <label htmlFor=\"labelAlignment\">label alignment</label>\r\n        <select\r\n          name=\"labelAlignment\"\r\n          defaultValue=\"right\"\r\n          id=\"labelAlignment\"\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"left\">left</option>\r\n          <option value=\"center\">center</option>\r\n          <option value=\"right\">right</option>\r\n          <option value=\"outside\">outside</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"param\">\r\n        <button onClick={() => cpThree.setIsVisible(true)}>\r\n          Choose Label Color\r\n        </button>\r\n        {cpThree.isVisible && (\r\n          <div\r\n            ref={cpThree.ref}\r\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\r\n          >\r\n            <ChromePicker\r\n              name=\"labelColor\"\r\n              color={labelColor}\r\n              onChangeComplete={handleColorChangeCpThree}\r\n            />\r\n          </div>\r\n        )}\r\n        <input\r\n          value={labelColor}\r\n          name=\"labelColor\"\r\n          type=\"text\"\r\n          onChange={event => {\r\n            handleChange(event);\r\n            setBaseBgColor(event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"param\">\r\n        <label htmlFor=\"labelSize\">label size</label>\r\n        <input\r\n          name=\"labelSize\"\r\n          id=\"labelSize\"\r\n          type=\"text\"\r\n          placeholder=\"15px\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"param\">\r\n        <button onClick={() => cpTwo.setIsVisible(true)}>\r\n          Choose \"non-completed\" Bar Color\r\n        </button>\r\n        {cpTwo.isVisible && (\r\n          <div\r\n            ref={cpTwo.ref}\r\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\r\n          >\r\n            <ChromePicker\r\n              name=\"baseBgColor\"\r\n              color={baseBgColor}\r\n              onChangeComplete={handleColorChangeCpTwo}\r\n            />\r\n          </div>\r\n        )}\r\n        <input\r\n          value={baseBgColor}\r\n          name=\"baseBgColor\"\r\n          type=\"text\"\r\n          onChange={event => {\r\n            handleChange(event);\r\n            setBaseBgColor(event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"param\">\r\n        <label htmlFor=\"margin\">margin</label>\r\n        <input name=\"margin\" id=\"margin\" type=\"text\" onChange={handleChange} />\r\n      </div>\r\n      <div className=\"param\">\r\n        <label htmlFor=\"padding\">padding</label>\r\n        <input\r\n          name=\"padding\"\r\n          id=\"padding\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Parameters;\r\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport Parameters from \"./Parameters\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport \"./customizedBar.styles.scss\";\r\n\r\nconst CustomizedBar = () => {\r\n  const INITIAL_STATE = {\r\n    completed: 50,\r\n    bgcolor: \"#6a1b9a\",\r\n    height: \"20px\",\r\n    width: \"100%\",\r\n    borderRadius: \"50px\",\r\n    labelAlignment: \"right\",\r\n    baseBgColor: \"#e0e0de\",\r\n    labelColor: \"#e80909\",\r\n    labelSize: \"15px\",\r\n    margin: \"\",\r\n    padding: \"\"\r\n  };\r\n\r\n  const [state, setState] = useState(INITIAL_STATE);\r\n  const [showCode, setShowCode] = useState(false);\r\n  const [codeValue, setCodeValue] = useState(\"\");\r\n  const [copySuccess, setCopySuccess] = useState(\"Copy\");\r\n  const textAreaRef = useRef(null);\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleBgChange = color => {\r\n    setState({\r\n      ...state,\r\n      bgcolor: color\r\n    });\r\n  };\r\n\r\n  const handleBaseBgChange = color => {\r\n    setState({\r\n      ...state,\r\n      baseBgColor: color\r\n    });\r\n  };\r\n\r\n  const handleLabelColorChange = color => {\r\n    setState({\r\n      ...state,\r\n      labelColor: color\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setState(INITIAL_STATE);\r\n    setShowCode(false);\r\n  };\r\n\r\n  const copyToClipboard = e => {\r\n    textAreaRef.current.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n    setCopySuccess(\"Copied!\");\r\n  };\r\n\r\n  const generateCode = () => {\r\n    setCopySuccess(\"Copy\");\r\n    setShowCode(true);\r\n    const tempCode = `<ProgressBar \r\n    completed={${state.completed}}\r\n    ${state.bgcolor === \"#6a1b9a\" ? \"\" : `bgcolor=\"${state.bgcolor}\"`}\r\n    ${state.height === \"20px\" ? \"\" : `height=\"${state.height}\"`}\r\n    ${state.width === \"100%\" ? \"\" : `width=\"${state.width}\"`}\r\n    ${\r\n      state.borderRadius === \"50px\"\r\n        ? \"\"\r\n        : `borderRadius=\"${state.borderRadius}\"`\r\n    }\r\n    ${\r\n      state.labelAlignment === \"right\"\r\n        ? \"\"\r\n        : `labelAlignment=\"${state.labelAlignment}\"`\r\n    }\r\n    ${\r\n      state.baseBgColor === \"#e0e0de\"\r\n        ? \"\"\r\n        : `baseBgColor=\"${state.baseBgColor}\"`\r\n    }\r\n    ${state.labelColor === \"#fff\" ? \"\" : `labelColor=\"${state.labelColor}\"`}\r\n    ${state.labelSize === \"15px\" ? \"\" : `labelSize=\"${state.labelSize}\"`}\r\n    ${state.margin === \"\" ? \"\" : `margin=\"${state.margin}\"`}\r\n    ${state.padding === \"\" ? \"\" : `padding=\"${state.padding}\"`}\r\n    />`;\r\n    const code = tempCode.replace(/^\\s*$(?:\\r\\n?|\\n)/gm, \"\");\r\n    setCodeValue(code);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProgressBar {...state} />\r\n      <Parameters\r\n        handleChange={handleChange}\r\n        handleBgChange={handleBgChange}\r\n        handleBaseBgChange={handleBaseBgChange}\r\n        handleLabelColorChange={handleLabelColorChange}\r\n        handleReset={handleReset}\r\n      />\r\n      <button className=\"reset-button\" onClick={handleReset}>\r\n        RESET\r\n      </button>\r\n      <button className=\"code-button\" onClick={generateCode}>\r\n        Generate Component Code\r\n      </button>\r\n      <div>\r\n        {showCode && (\r\n          <div className=\"code-area\">\r\n            <button onClick={copyToClipboard}>{copySuccess}</button>\r\n            <textarea\r\n              ref={textAreaRef}\r\n              value={codeValue}\r\n              onChange={e => setCodeValue(e.target.value)}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomizedBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CustomizedBar from \"./CustomizedBar\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\n\r\nconst DemoApp = () => {\r\n    const [completed, setCompleted] = useState(0);\r\n\r\n    useEffect(() => {\r\n      setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\r\n    }, []);\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <h3>{\"Randomly generated completed value\"}</h3>\r\n        <ProgressBar completed={completed} />\r\n        <hr />\r\n        <h3>{\"Interactive Generator\"}</h3>\r\n        <CustomizedBar />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default DemoApp;","import React from \"react\";\r\nimport useViewCounter from \"./useViewCounter.hook\";\r\nimport DemoApp from \"./DemoApp\";\r\n\r\nconst App = () => {\r\n  const getSlug = () => {\r\n    let slug = window.location.pathname;\r\n    if (slug.charAt(0) === \"/\") {\r\n      slug = slug.substring(1);\r\n    }\r\n    return slug;\r\n  };\r\n  useViewCounter(getSlug());\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <DemoApp />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}